package server

// Code generated by go generate; DO NOT EDIT.

import (
	"bufio"
	"fmt"
	"io"
	"net/http"
	"regexp"
	"strings"

	"github.com/tdewolff/minify"
)

const buildtime = "1525102992"

var (
	faviconRegexp = regexp.MustCompile(`<link href="([^"]*)" rel="icon">`)
	cssRegexp     = regexp.MustCompile(`<link rel="stylesheet" href="([^"]*)" />`)
	jsRegexp      = regexp.MustCompile(`<script src="([^"]*)"></script>`)
)

type BuildtimeResponseWriter struct {
	res http.ResponseWriter
	mw  io.WriteCloser
}

func (m BuildtimeResponseWriter) Write(b []byte) (int, error) {
	return m.mw.Write(b)
}

func (m BuildtimeResponseWriter) Close() error {
	return m.mw.Close()
}

// BuildtimeFilter modifies the HTML files in order to force assets refresh on new build.
func BuildtimeFilter(mediatype string, res http.ResponseWriter) BuildtimeResponseWriter {
	m := minify.New()
	m.AddFunc("text/html", func(m *minify.M, w io.Writer, r io.Reader, _ map[string]string) error {
		rb := bufio.NewReader(r)
		for {
			line, err := rb.ReadString('\n')
			if err != nil && err != io.EOF {
				return err
			}

			var sed []string
			if m := faviconRegexp.FindAllStringSubmatch(line, -1); len(m) > 0 {
				sed = m[0]
			}
			if m := jsRegexp.FindAllStringSubmatch(line, -1); len(m) > 0 {
				sed = m[0]
			}
			if m := cssRegexp.FindAllStringSubmatch(line, -1); len(m) > 0 {
				sed = m[0]
			}
			if sed != nil {
				line = strings.Replace(line, sed[1], fmt.Sprintf("%s?buildtime=%s", sed[1], buildtime), -1)
			}

			if _, errws := io.WriteString(w, line); errws != nil {
				return errws
			}
			if err == io.EOF {
				break
			}
		}
		return nil
	})

	mw := m.Writer(mediatype, res)
	return BuildtimeResponseWriter{res: res, mw: mw}
}
